(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{196:function(t,s,i){"use strict";i.r(s);var a=i(0),e=Object(a.a)({},function(){var t=this.$createElement,s=this._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h1",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")]),this._v(" "),s("p",[this._v("享元模式（FlyWeight）：运用共享技术有效的支持大量细粒度对象的重用。 应用场景：如果项目中有很多完全相同或相似的对象，则可以使用享元模式，节省内存。 享元对象能做到共享的关键就是区分了内部状态和外部状态。 内部状态：可以共享，不会随环境变化而变化 外部状态：不可以共享，会随环境变化而变化 "),s("strong",[this._v("享元模式 UML 图")]),this._v(" "),s("img",{attrs:{src:"https://ws3.sinaimg.cn/large/006tKfTcly1fq51k6utxnj30go0aljs3.jpg",alt:"img"}})])])},[],!1,null,null,null);s.default=e.exports}}]);